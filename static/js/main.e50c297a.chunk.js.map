{"version":3,"sources":["store/dictionaryReducer.js","components/Home.jsx","components/Result.jsx","saga/dictionarySaga.js","saga/index.js","store/index.js","App.jsx","index.jsx"],"names":["SET_WORD","SET_INFO","DATA_CORRECT","DATA_ERROR","FETCH_WORD_START","FETCH_WORD_END","defState","data","error","word","isLoading","Home","dispatch","useDispatch","getInfo","e","preventDefault","document","querySelector","value","type","payload","className","name","placeholder","onClick","to","Result","useSelector","state","reducer","err","class","Audio","phonetics","audio","play","map","phonetic","origin","meanings","meaning","partOfSpeech","definitions","def","definition","fetchDictionaryWorker","dictionaryWatcher","fetchInfoFromApi","fetch","put","call","Promise","res","json","console","log","title","takeEvery","rootWatcher","all","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","action","store","createStore","applyMiddleware","run","App","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.e50c297a.chunk.js","sourcesContent":["export const SET_WORD = \"SET_WORD\";\nexport const SET_INFO = \"SET_INFO\";\nexport const DATA_CORRECT = \"DATA_CORRECT\";\nexport const DATA_ERROR = \"DATA_ERROR\";\nexport const FETCH_WORD_START = \"FETCH_WORD_START\";\nexport const FETCH_WORD_END = \"FETCH_WORD_END\";\n\nexport const setWord = payload => ({ type: SET_WORD, payload });\nexport const setInfo = payload => ({ type: SET_INFO, payload });\nexport const dataCorrect = () => ({ type: DATA_CORRECT });\nexport const dataError = () => ({ type: DATA_ERROR });\nexport const fetchWordStart = () => ({type: FETCH_WORD_START}); \nexport const fetchWordEnd = () => ({type: FETCH_WORD_END});\n\nconst defState = {\n    data: [],\n    error: false,\n    word: \"\",\n    isLoading: false,\n}\n\nexport default function reducer(state = defState, action) {\n    switch (action.type) {\n        case SET_WORD:\n            return { ...state, word: action.payload };\n        case SET_INFO:\n            return { ...state, data: action.payload };\n        case DATA_CORRECT:\n            return {...state, error: false};\n        case DATA_ERROR: \n            return {...state, error: true};\n        case FETCH_WORD_START:\n            return {...state, isLoading: true};\n        case FETCH_WORD_END:\n            return {...state, isLoading: false};\n\n        default:\n            return state;\n    }\n}","import { useDispatch } from \"react-redux\";\r\nimport { setWord } from \"../store/dictionaryReducer\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nexport let word;\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch()\r\n    \r\n    function getInfo(e) {\r\n        e.preventDefault();\r\n        word = document.querySelector(\".home__input\").value;\r\n        dispatch(setWord(word));\r\n    }\r\n\r\n    return (\r\n        <div className=\"home__wraper\">\r\n            <h1 className=\"home__title\">Dictionary</h1>\r\n            <div className=\"home__content\">\r\n                <input className=\"home__input\" type=\"text\" name=\"word\" placeholder=\"Word to search\" />\r\n                <button className=\"home__button\" onClick={(e) => {getInfo(e)}}><NavLink to={`/result`}><SearchIcon/></NavLink></button>\r\n             </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n\r\n","import { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\n\r\nconst Result = () => {\r\n\r\n    const word = useSelector(state => state.reducer.word);\r\n    const data = useSelector(state => state.reducer.data);\r\n    const err = useSelector(state => state.reducer.error);\r\n    const isLoading = useSelector(state => state.reducer.isLoading);\r\n\r\n    function playAudio() {\r\n        let audio = new Audio(data[0].phonetics[0].audio || data[0].phonetics[1].audio);\r\n        audio.play();\r\n    }\r\n\r\n    return (\r\n        <div className=\"result__wraper\">\r\n\r\n            {isLoading &&\r\n                <div>\r\n                    <button class=\"result__spinner-button\">\r\n                        <span class=\"result__spinner\"></span>\r\n                        <span class=\"result__text\">loading...</span>\r\n                    </button>\r\n                </div>\r\n            }\r\n\r\n            {!isLoading &&\r\n                <div>\r\n                    {(!err) ? (\r\n                        <div className=\"result__body\">\r\n                            <div className=\"result__header\">\r\n                                <div className=\"result__request\">Search Result - {word}</div>\r\n                                <button className=\"result__button\" onClick={() => { playAudio(); }}><VolumeUpIcon /> Play sound</button>\r\n                            </div>\r\n                            <div className=\"result__content\">\r\n                                {data.map(data =>\r\n                                    <div className=\"result__data\">\r\n                                        <p className=\"result__item\">Word: <span>{data.word}</span></p>\r\n                                        {data.phonetic && <p className=\"result__item\">Phonetic: <span>{data.phonetic}</span></p>}\r\n                                        {data.origin && <p className=\"result__item\">Origin: <span>{data.origin}</span></p>}\r\n                                        {data.meanings && data.meanings.map(meaning =>\r\n                                            <div>\r\n                                                <p>Part of speech: <span>{meaning.partOfSpeech}</span></p>\r\n                                                <p>Definitions: <span>{meaning.definitions.map(def =>\r\n                                                    <p>Definition: <span><i>\"{def.definition}\"</i></span></p>\r\n                                                )}</span></p>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <button className=\"result__button\"><NavLink to={`/`}><ArrowBackIosIcon />Back to search</NavLink></button>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <div className=\"result__error\">\r\n                                <div className=\"container-floud\">\r\n                                    <div className=\"col-xs-12 ground-color text-center\">\r\n                                        <div className=\"container-error-404\">\r\n                                            <div className=\"clip\"><div class=\"shadow\"><span class=\"digit thirdDigit\">4</span></div></div>\r\n                                            <div className=\"clip\"><div class=\"shadow\"><span class=\"digit secondDigit\">0</span></div></div>\r\n                                            <div className=\"clip\"><div class=\"shadow\"><span class=\"digit firstDigit\">4</span></div></div>\r\n                                            <div className=\"msg\">OH!<span class=\"triangle\"></span></div>\r\n                                        </div>\r\n                                        <h2 className=\"h1\">Sorry! Word is not found</h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <button className=\"result__button\"><NavLink to={`/`}><ArrowBackIosIcon />Back to search</NavLink></button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Result;\r\n\r\n\r\n\r\n\r\n","import { put, takeEvery, call } from \"redux-saga/effects\"\nimport { setInfo, SET_WORD, fetchWordEnd, fetchWordStart, dataCorrect, dataError } from \"../store/dictionaryReducer\";\nimport { word } from \"../components/Home\";\n\n\nconst fetchInfoFromApi = () => fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\n\nfunction* fetchDictionaryWorker() {\n    yield put(fetchWordStart());\n    const data = yield call(fetchInfoFromApi);\n    const json = yield call(() => new Promise(res => res(data.json())))\n    yield put(setInfo(json));\n    console.log(`JSON: `, json);\n    (!json.title) ? (yield put(dataCorrect())) : (yield put(dataError()));\n\n    yield put(fetchWordEnd());\n\n}\n\nexport function* dictionaryWatcher() {\n    yield takeEvery(SET_WORD, fetchDictionaryWorker)\n}\n \n","import {all} from \"redux-saga/effects\"\nimport {dictionaryWatcher} from \"./dictionarySaga\";\n\nexport function* rootWatcher() {\n    yield all([dictionaryWatcher()])\n}\n\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport reducer from \"./dictionaryReducer\";\nimport createSagaMiddleware from 'redux-saga'\nimport {rootWatcher} from \"../saga\";\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst rootReducer = combineReducers({\n    reducer\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(rootWatcher)\n\n\n\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Result from './components/Result';\nimport { store } from './store';\n\nconst App = () => {\n    return (\n        <div className=\"wraper\">\n            <div className=\"container\">\n                <Provider store={store}>\n                        <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                            <Route exact path=\"/result\" component={Result} />    \n                        </Switch>\n                </Provider>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </Provider>,\n    document.querySelector(\".app__body\")\n);\n\n"],"sourceRoot":""}